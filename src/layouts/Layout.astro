---
import { SITE } from '../config/site';

export interface Props {
	title?: string;
}

const { title = SITE.title } = Astro.props;

// 현재 경로 확인 및 base path 처리
const currentPath = Astro.url.pathname;
const base = import.meta.env.BASE_URL;
---

<!doctype html>
<html lang="ko">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href={`${base}favicon.svg`} />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<link rel="stylesheet" as="style" crossorigin href="https://cdn.jsdelivr.net/gh/orioncactus/pretendard@v1.3.9/dist/web/variable/pretendardvariable.min.css" />
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Source+Code+Pro:ital,wght@0,200..900;1,200..900&display=swap" rel="stylesheet">
		<script is:inline>
			// FOUC 방지를 위한 즉시 실행 테마 설정
			(function() {
				const savedTheme = localStorage.getItem('theme');
				const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
				const theme = savedTheme || (systemPrefersDark ? 'dark' : 'light');
				document.documentElement.setAttribute('data-theme', theme);
				
				// 아이콘도 즉시 설정
				function setThemeIcon() {
					const themeToggle = document.getElementById('theme-toggle');
					const moonIcon = themeToggle?.querySelector('.moon-icon');
					const sunIcon = themeToggle?.querySelector('.sun-icon');
					
					if (moonIcon && sunIcon) {
						if (theme === 'dark') {
							// 태양 아이콘 표시, 달 아이콘 숨김
							moonIcon.style.display = 'none';
							sunIcon.style.display = 'inline';
						} else {
							// 달 아이콘 표시, 태양 아이콘 숨김
							moonIcon.style.display = 'inline';
							sunIcon.style.display = 'none';
						}
					} else {
						// DOM이 아직 준비되지 않은 경우 잠시 후 재시도
						setTimeout(setThemeIcon, 10);
					}
				}
				
				// DOM 로드 후 아이콘 설정
				if (document.readyState === 'loading') {
					document.addEventListener('DOMContentLoaded', setThemeIcon);
				} else {
					setThemeIcon();
				}
			})();
		</script>
	</head>
	<body>
		<div class="container">
			<nav>
				<a href={base} class="logo">{SITE.name}</a>
				<div class="nav-links">
					<a href={base} class={currentPath === base || currentPath === `${base}` ? 'active' : ''}>블로그</a>
					<a href={`${base}projects`} class={currentPath === `${base}projects` ? 'active' : ''}>프로젝트</a>
					<a href={`${base}resume`} class={currentPath === `${base}resume` ? 'active' : ''}>이력서</a>
					<button id="theme-toggle" class="theme-toggle" aria-label="다크 모드 토글">
						<svg class="theme-icon moon-icon" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
							<path d="M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z" />
						</svg>
						<svg class="theme-icon sun-icon" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="display: none;">
							<path d="M12 12m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
							<path d="M3 12h1m8 -9v1m8 8h1m-9 8v1m-6.4 -15.4l.7 .7m12.1 -.7l-.7 .7m0 11.4l.7 .7m-12.1 -.7l-.7 .7" />
						</svg>
					</button>
				</div>
			</nav>
			<main>
				<slot />
			</main>
		</div>
	</body>
</html>

<script>
	// 다크 모드 토글 기능
	function initTheme() {
		const themeToggle = document.getElementById('theme-toggle');
		const html = document.documentElement;
		
		// 현재 테마 상태 확인 (이미 head script에서 설정됨)
		const currentTheme = (html.getAttribute('data-theme') || 'light') as 'light' | 'dark';
		
		// 아이콘 동기화 (head script에서 이미 설정했지만 한번 더 확인)
		updateToggleIcon(currentTheme);
		
		// 토글 버튼 클릭 이벤트
		themeToggle?.addEventListener('click', () => {
			const currentTheme = html.getAttribute('data-theme');
			const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
			
			html.setAttribute('data-theme', newTheme);
			localStorage.setItem('theme', newTheme);
			updateToggleIcon(newTheme);
			updateGiscusTheme(newTheme);
		});
		
		function updateToggleIcon(theme: 'light' | 'dark') {
			const moonIcon = themeToggle?.querySelector<HTMLElement>('.moon-icon');
			const sunIcon = themeToggle?.querySelector<HTMLElement>('.sun-icon');
			
			if (moonIcon && sunIcon) {
				if (theme === 'dark') {
					// 태양 아이콘 표시, 달 아이콘 숨김
					moonIcon.style.display = 'none';
					sunIcon.style.display = 'inline';
				} else {
					// 달 아이콘 표시, 태양 아이콘 숨김
					moonIcon.style.display = 'inline';
					sunIcon.style.display = 'none';
				}
			}
		}
		
		// giscus 테마 동기화 함수
		function updateGiscusTheme(theme: 'light' | 'dark') {
			const giscusFrame = document.querySelector<HTMLIFrameElement>('iframe.giscus-frame');
			if (giscusFrame && giscusFrame.contentWindow) {
				giscusFrame.contentWindow.postMessage({
					giscus: {
						setConfig: {
							theme: theme === 'dark' ? 'dark' : 'light'
						}
					}
				}, 'https://giscus.app');
			}
		}
	}
	
	// DOM이 로드되면 실행
	document.addEventListener('DOMContentLoaded', initTheme);

	// 네비게이션 플로팅 효과
	function initNavFloat() {
		const nav = document.querySelector('nav');

		function updateNavFloat() {
			if (!nav) return;
			const currentScrollY = window.scrollY;
			
			if (currentScrollY > 20) {
				nav.classList.add('floating');
			} else {
				nav.classList.remove('floating');
			}
		}

		window.addEventListener('scroll', updateNavFloat, { passive: true });
		// 초기 상태 설정
		updateNavFloat();
	}

	// DOM 로드 후 네비게이션 플로팅 효과 초기화
	document.addEventListener('DOMContentLoaded', initNavFloat);
</script>

<style>
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
		font-family: 'Pretendard Variable', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
		background-color: #f5f5f5;
		color: #333;
		transition: background-color 0.3s ease, color 0.3s ease;
	}

	html[data-theme="dark"],
	html[data-theme="dark"] body {
		background-color: #1a1a1a;
		color: #e4e4e4;
	}

	.container {
		max-width: 800px;
		margin: 0 auto;
		padding: 1rem 2rem;
		background-color: white;
		min-height: 100vh;
		box-shadow: 0 0 20px rgba(0, 0, 0, 0.05);
		transition: background-color 0.3s ease, box-shadow 0.3s ease;
	}

	html[data-theme="dark"] .container {
		background-color: #2d2d2d;
		box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);
	}

	nav {
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: 0.5rem 0 1rem 0;
		position: sticky;
		top: 0;
		background-color: white;
		z-index: 100;
		transition: box-shadow 0.3s ease, backdrop-filter 0.3s ease, max-width 0.3s ease, margin 0.3s ease, padding 0.3s ease, background-color 0.3s ease;
	}

	nav.floating {
		box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
		backdrop-filter: blur(8px);
		background-color: rgba(255, 255, 255, 0.95);
		max-width: 800px;
		margin: 0.5rem auto;
		padding: 0.5rem 2rem 0.5rem 2rem;
		border-radius: 12px;
		top: 0.5rem;
	}

	html[data-theme="dark"] nav {
		background-color: #2d2d2d;
	}

	html[data-theme="dark"] nav.floating {
		box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
		background-color: rgba(45, 45, 45, 0.95);
		max-width: 800px;
		margin: 0.5rem auto;
		padding: 0.5rem 2rem 0.5rem 2rem;
		border-radius: 12px;
		top: 0.5rem;
	}

	.logo {
		font-size: 1.4rem;
		font-weight: bold;
		color: #333;
		text-decoration: none;
		transition: color 0.3s ease;
	}

	.logo:hover {
		color: #007acc;
	}

	html[data-theme="dark"] .logo {
		color: #e4e4e4;
	}

	html[data-theme="dark"] .logo:hover {
		color: #1e90ff;
	}

	.nav-links {
		display: flex;
		gap: 1.5rem;
		align-items: center;
	}

	.nav-links a {
		color: #666;
		text-decoration: none;
		font-weight: 500;
		transition: color 0.3s ease;
	}

	.nav-links a:hover {
		color: #007acc;
	}

	.nav-links a.active {
		color: #007acc;
		font-weight: 600;
	}

	html[data-theme="dark"] .nav-links a {
		color: #b4b4b4;
	}

	html[data-theme="dark"] .nav-links a:hover {
		color: #1e90ff;
	}

	html[data-theme="dark"] .nav-links a.active {
		color: #1e90ff;
		font-weight: 600;
	}

	.theme-toggle {
		background: none;
		border: 1px solid #ddd;
		cursor: pointer;
		padding: 0.4rem 0.6rem;
		border-radius: 4px;
		transition: all 0.3s ease;
		margin-left: 0.5rem;
		font-size: 0.9rem;
		color: #666;
		width: 2.5rem;
		display: flex;
		align-items: center;
		justify-content: center;
	}

	.theme-toggle:hover {
		background-color: #f5f5f5;
		border-color: #007acc;
	}

	.moon-icon,
	.sun-icon {
		width: 18px;
		height: 18px;
		transition: transform 0.3s ease;
		color: #666;
	}

	html[data-theme="dark"] .theme-toggle {
		border-color: #555;
		color: #b4b4b4;
	}

	html[data-theme="dark"] .theme-toggle:hover {
		background-color: #3a3a3a;
		border-color: #1e90ff;
	}

	/* 다크모드 아이콘 색상 */
	html[data-theme="dark"] .moon-icon,
	html[data-theme="dark"] .sun-icon {
		color: #b4b4b4;
	}

	main {
		padding: 0;
	}

	/* 공통 다크모드 스타일 */
	html[data-theme="dark"] h1,
	html[data-theme="dark"] h2,
	html[data-theme="dark"] h3 {
		color: #f0f0f0;
	}

	html[data-theme="dark"] p {
		color: #d0d0d0;
	}

	/* 카드 스타일 다크모드 */
	html[data-theme="dark"] .project-card,
	html[data-theme="dark"] .resume-section {
		background-color: #3a3a3a;
		border-color: #555;
		color: #e4e4e4;
	}

	html[data-theme="dark"] .post-title {
		color: #f0f0f0;
	}

	html[data-theme="dark"] .post-date {
		color: #a0a0a0;
	}

	/* 프로젝트 카드 다크모드 */
	html[data-theme="dark"] .project-card:hover {
		box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);
	}

	html[data-theme="dark"] .status {
		color: white;
	}

	html[data-theme="dark"] .period {
		color: #a0a0a0;
	}

	html[data-theme="dark"] .tech {
		background-color: #555;
		color: #d0d0d0;
	}

	html[data-theme="dark"] .link {
		color: #1e90ff;
	}

	html[data-theme="dark"] .link:hover {
		color: #4169e1;
	}

	/* 이력서 다크모드 */
	html[data-theme="dark"] .resume-section h2 {
		border-bottom-color: #1e90ff;
		color: #f0f0f0;
	}

	html[data-theme="dark"] .skill {
		background-color: #1e90ff;
		color: white;
	}

	html[data-theme="dark"] .experience {
		border-bottom-color: #555;
	}

	html[data-theme="dark"] .position {
		color: #1e90ff;
	}

	html[data-theme="dark"] .achievements li {
		color: #d0d0d0;
	}

	html[data-theme="dark"] .degree {
		color: #a0a0a0;
	}

	/* 헤더 다크모드 */
	html[data-theme="dark"] .blog-header,
	html[data-theme="dark"] .projects-header,
	html[data-theme="dark"] .resume-header {
		border-bottom-color: #555;
	}

	html[data-theme="dark"] .blog-header p,
	html[data-theme="dark"] .projects-header p,
	html[data-theme="dark"] .resume-header p {
		color: #a0a0a0;
	}

	/* 홈페이지 다크모드 */
	html[data-theme="dark"] .subtitle {
		color: #a0a0a0;
	}

	html[data-theme="dark"] .intro {
		color: #d0d0d0;
	}

	@media (max-width: 768px) {
		.container {
			padding: 0.75rem 1rem;
		}

		nav.floating {
			padding: 0.5rem 1rem 0.5rem 1rem;
			margin: 0.5rem 1rem;
			max-width: calc(100% - 2rem);
		}

		.nav-links {
			gap: 1rem;
		}

		.logo {
			font-size: 1.2rem;
		}

		.theme-toggle {
			padding: 0.3rem 0.5rem;
			font-size: 0.8rem;
			margin-left: 0.3rem;
			width: 2.2rem;
		}
	}
</style>
